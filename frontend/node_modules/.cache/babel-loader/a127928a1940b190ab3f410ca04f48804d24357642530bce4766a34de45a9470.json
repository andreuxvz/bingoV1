{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/projects/2023/examV1/frontend/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./Home.css\";\nimport bingoService from \"../services/Bingo\";\nimport Bingo from \"../components/Bingo\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [cardNumbers, setCardsNumbers] = useState({});\n  const [cardId, setCardId] = useState(\"\");\n  const [gameResult, setGameResult] = useState([]);\n  const [bolaSelected, setBolaSelected] = useState(0);\n  const [winnerInfo, setWinnerInfo] = useState({});\n  const [isWinner, setIsWinner] = useState(false);\n  const [isFinishedGame, setIsFinishedGame] = useState(true);\n  const getCard = async () => {\n    const {\n      data\n    } = await bingoService.getNewCard();\n    setGameResult([]);\n    setBolaSelected(0);\n    setCardId(data.data.bingo._id);\n    setCardsNumbers(data.data.bingoOrdered);\n    setIsWinner(false);\n    setIsFinishedGame(false);\n  };\n  const sleep = ms => new Promise(r => setTimeout(r, ms));\n  const startGame = async () => {\n    if (cardId) {\n      const {\n        data\n      } = await bingoService.startGame(cardId);\n      setWinnerInfo(data.data.winnerInfo);\n      getBola(data.data.winningNumbers, data.data.winnerInfo);\n    }\n  };\n  useEffect(() => {}, [0]);\n  const getBola = async (bingoResult, winnerInfo) => {\n    const newGameRes = [];\n    for (let index = 0; index < bingoResult.length; index++) {\n      const element = bingoResult[index];\n      setBolaSelected(element);\n      newGameRes.unshift(element);\n      setGameResult([...newGameRes]);\n      if (winnerInfo && winnerInfo.winnerPosition > 4 && index === winnerInfo.winnerPosition) {\n        await sleep(2000);\n        setIsWinner(true);\n      } else {\n        await sleep(1000);\n      }\n      if (index + 1 === bingoResult.length) {\n        setIsFinishedGame(true);\n      }\n    }\n  };\n  useEffect(() => {}, [0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cardNumbers: Object.values(cardNumbers),\n      getCard: getCard,\n      isWinner: isWinner,\n      gameResult: gameResult,\n      isFinishedGame: isFinishedGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bingo, {\n      cardNumbers: Object.values(cardNumbers).length,\n      startGame: startGame,\n      bolaSelected: bolaSelected,\n      gameResult: gameResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Saldran 50 bolas much\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"9nwjpJzV7GJJvvJxKvrSudK2t40=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","bingoService","Bingo","Card","jsxDEV","_jsxDEV","Home","_s","cardNumbers","setCardsNumbers","cardId","setCardId","gameResult","setGameResult","bolaSelected","setBolaSelected","winnerInfo","setWinnerInfo","isWinner","setIsWinner","isFinishedGame","setIsFinishedGame","getCard","data","getNewCard","bingo","_id","bingoOrdered","sleep","ms","Promise","r","setTimeout","startGame","getBola","winningNumbers","bingoResult","newGameRes","index","length","element","unshift","winnerPosition","className","children","Object","values","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andreu/Documents/projects/2023/examV1/frontend/src/pages/Home.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./Home.css\";\nimport bingoService from \"../services/Bingo\";\nimport Bingo from \"../components/Bingo\";\nimport Card from \"../components/Card\";\n\nconst Home = () => {\n  const [cardNumbers, setCardsNumbers] = useState<{}>({});\n  const [cardId, setCardId] = useState<string>(\"\");\n  const [gameResult, setGameResult] = useState<number[]>([]);\n  const [bolaSelected, setBolaSelected] = useState(0);\n  const [winnerInfo, setWinnerInfo] = useState<any>({});\n  const [isWinner, setIsWinner] = useState<boolean>(false);\n  const [isFinishedGame, setIsFinishedGame] = useState<boolean>(true);\n\n  const getCard = async () => {\n    const { data } = await bingoService.getNewCard();\n    setGameResult([]);\n    setBolaSelected(0);\n    setCardId(data.data.bingo._id);\n    setCardsNumbers(data.data.bingoOrdered);\n    setIsWinner(false);\n    setIsFinishedGame(false);\n  };\n\n  const sleep = (ms: number) => new Promise((r) => setTimeout(r, ms));\n\n  const startGame = async () => {\n    if (cardId) {\n      const { data } = await bingoService.startGame(cardId);\n      setWinnerInfo(data.data.winnerInfo);\n      getBola(data.data.winningNumbers, data.data.winnerInfo);\n    }\n  };\n\n  useEffect(() => {}, [0]);\n\n  const getBola = async (bingoResult: number[], winnerInfo: any) => {\n    const newGameRes: number[] = [];\n\n    for (let index = 0; index < bingoResult.length; index++) {\n      const element = bingoResult[index];\n      setBolaSelected(element);\n      newGameRes.unshift(element);\n      setGameResult([...newGameRes]);\n\n      if (\n        winnerInfo &&\n        winnerInfo.winnerPosition > 4 &&\n        index === winnerInfo.winnerPosition\n      ) {\n        await sleep(2000);\n        setIsWinner(true);\n      } else {\n        await sleep(1000);\n      }\n\n      if (index + 1 === bingoResult.length) {\n        setIsFinishedGame(true);\n      }\n    }\n  };\n\n  useEffect(() => {}, [0]);\n\n  return (\n    <div className=\"game\">\n      <Card\n        cardNumbers={Object.values(cardNumbers)}\n        getCard={getCard}\n        isWinner={isWinner}\n        gameResult={gameResult}\n        isFinishedGame={isFinishedGame}\n      />\n\n      <Bingo\n        cardNumbers={Object.values(cardNumbers).length}\n        startGame={startGame}\n        bolaSelected={bolaSelected}\n        gameResult={gameResult}\n      />\n      <div>Saldran 50 bolas much</div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}